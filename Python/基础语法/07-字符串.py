# Python 访问字符串中的值
var_1 = 'Hello Word!'
var_2 = 'Python!'
print('var_1[0]: ', var_1[0])
print('var_1[2:5]: ', var_2[2:5])

# Python 字符串更新
print('已更新字符串 :', var_1[:6] + var_2)

# Python 转义字符
# 在需要在字符中使用特殊字符时，python 用反斜杠 \ 转义字符。如下表

# \(在行尾时) 续行符
print('第一行 \
       第二行 \
       第三行')

# \\ 反斜杠符号
print('\\')

# \' 单引号
print('\'')

# \a 响铃
# print('\a')

# \000 空
print('\000')

# \v 纵向制表符
# TODO 这里跟菜鸟教程的输出结果有出入
print('Hello \v Python!')

# \t 横向制表符
# TODO 这里跟菜鸟教程的输出结果有出入
print('Hello \t Python! \v Hello \t JavaScript')

# \r 回车 回车，将 \r 后面的内容移到字符串开头，并逐一替换开头部分的字符，直至将 \r 后面的内容完全替换完成。
# TODO 这里跟菜鸟教程的输出结果有出入
print('google runoob taobao \r123456')

# \f 换页
# TODO 这里跟菜鸟教程的输出结果有出入
print('Hello \f Python!')

# \yyy 八进制数，y 代表 0~7 的字符，例如：\012 代表换行。
print('\110\145\154\154\157\40\127\157\162\154\144\41')

# \xyy 十六进制数，以 \x 开头，y 代表的字符，例如：\x0a 代表换行
print('\x48\x65\x6c\x6c\x6f\x20\x57\x6f\x72\x6c\x64\x21')

# \other 其他的字符以普通格式输出
# TODO 暂未理解
print('Hello Python!\other')

# Python 字符串运算符
'''
+      : 字符串相连
*      : 重复输出该字符串
[]     : 通过索引获取字符串中的某个字符
[:]    : 截取字符串中的一部分，遵循左闭右开原则
in     : 成员运算符 - 如果字符串中包含给定的字符返回 True
not in : 成员运算符 - 如果字符串中不包含给定的字符返回 True
r/R    : 原始字符串，所有字符串按照字面意思输出，不识别转义字符等
%      : 格式字符串
'''

# Python 字符串格式化
'''
%c : 格式化字符及其ASCII码
%s : 格式化字符串
%d : 格式化整数
%u : 格式化无符号整型
%o : 格式化无符号八进制数
%x : 格式化无符号十六进制数
%X : 格式化无符号十六进制数（大写）
%f : 格式化浮点数字，可指定小数点后的精度
%e : 用科学技术法格式化浮点数
%E : 作用同%e，用科学计数法格式化浮点数
%g : %f和%e的简写
%G : %f 和 %E 的简写
%p : 用十六进制数格式化变量的地址
'''

# 格式化操作符辅助指令

# f-string
str_1 = 'Python!'
print(f'Hello {str_1}')
print(f'{1+2}')
